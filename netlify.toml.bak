[build]
  command = "NODE_OPTIONS='--max-old-space-size=6144' npm ci && npm run build"
  publish = "dist"
  functions = "netlify/functions"
  base = "/"
  ignore = "git diff --quiet HEAD^ HEAD ./src"
  
[build.environment]
  NODE_VERSION = "20.12.2"
  NPM_VERSION = "10.7.0"
  SHARP_IGNORE_GLOBAL_LIBVIPS = "1"
  SHARP_DIST_BASE_URL = "https://npmmirror.com/mirrors/sharp/0.33.5/"
  CI = "true"
  NETLIFY_USE_YARN = "false"
  NETLIFY_NEXT_PLUGIN_SKIP = "true"
  SHARP_LIBVIPS_VERSION = "8.14.5"
  VITE_ENABLE_SENTRY = "true"

[build.processing]
  skip_processing = false
  css.bundle = true
  css.minify = true
  js.bundle = true
  js.minify = true
  images.compress = true

[build.processing.images]
  quality = 85
  formats = ["webp", "avif"]

[build.processing.html]
  pretty_urls = true
  link_masking = true

# Cache Control
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Cache-Status = "HIT"
    Vary = "Accept-Encoding"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=604800, must-revalidate"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=604800, must-revalidate"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Content-Security-Policy = "default-src 'self' 'unsafe-inline' 'unsafe-eval' https:; img-src 'self' data: blob: https:; font-src 'self' data: https:; connect-src 'self' https: *.sentry.io; media-src 'self' https:; object-src 'none'; frame-ancestors 'none';"
    Permissions-Policy = "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"

# Production context with optimizations
[context.production]
  command = "npm ci && npm run build"
  publish = "dist"
  [context.production.environment]
    NODE_ENV = "production"
    VITE_APP_ENV = "production"
    CI = "true"
    # Sentry variables will be set in Netlify UI

# Deploy Preview optimizations
[context.deploy-preview]
  command = "npm ci && npm run build"
  [context.deploy-preview.environment]
    NODE_ENV = "preview"
    VITE_APP_ENV = "preview"
    CI = "true"
    VITE_ENABLE_SENTRY = "true"

# Branch deploy optimizations
[context.branch-deploy]
  command = "npm ci && npm run build"
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    VITE_APP_ENV = "development"
    VITE_ENABLE_SENTRY = "true"

# Development optimization
[dev]
  framework = "vite"
  targetPort = 3000
  autoLaunch = true
  command = "npm run dev"

# Function optimization
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["sharp"]
  included_files = ["dist/**"]
  directory = "netlify/functions"

# Plugins for optimization
[[plugins]]
  package = "@netlify/plugin-lighthouse"

[[plugins]]
  package = "netlify-plugin-submit-sitemap"

[[plugins]]
  package = "@netlify/plugin-nextjs"

[[plugins]]
  package = "@netlify/plugin-cache"
  [plugins.inputs]
    paths = [
      "node_modules/.cache/vite",
      "node_modules/.cache/babel",
      "node_modules/.cache/postcss",
      "dist"
    ]

# Redirects and rewrites
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = true

[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Error page handling
[[redirects]]
  from = "/*"
  to = "/404.html"
  status = 404